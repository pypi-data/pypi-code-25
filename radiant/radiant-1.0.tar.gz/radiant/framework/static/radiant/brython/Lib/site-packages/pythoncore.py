from browser import ajax, window
#from tools import Tools
import json

########################################################################
class PythonCore:
    """"""

    #----------------------------------------------------------------------
    def __init__(self, url=None, csrftoken=None):
        """Constructor"""

        self.url_ = url

        if csrftoken:
            self.csrftoken = csrftoken

        elif hasattr(window, 'csrftoken'):
            self.csrftoken = window.csrftoken
        else:
            self.csrftoken = "NO_CSRFTOKEN_PROVIDED"

        if url is None:
            #try:
                #self.url_ = '/'
                #self.test()
            #except:
            self.url_ = '/system_python'
            self.test()


    #----------------------------------------------------------------------
    def __getattr__(self, attr):
        """"""
        if attr.endswith('_async'):
            attr = attr.replace('_async', '')
            f = lambda *args, **kwargs: self.__request_async__(attr, *args, **kwargs)
        else:
            f = lambda *args, **kwargs: self.__request__(attr, *args, **kwargs)

        f.__name__ = attr
        return f


    #----------------------------------------------------------------------
    def __request__(self, attr, *args, **kwargs):
        """"""
        req = ajax.ajax()
        req.open('POST', self.url_, False)
        req.set_header('content-type','application/x-www-form-urlencoded')
        req.send({'name': attr, 'args': args, 'kwargs': kwargs, 'csrfmiddlewaretoken': self.csrftoken})
        return json.loads(req.text)['__RDNT__']


    #----------------------------------------------------------------------
    def __request_async__(self, attr, *args, **kwargs):
        """"""
        def __ajax__(fn):
            req = ajax.ajax()
            req.bind('complete', fn)
            req.open('POST', self.url_, True)
            req.set_header('content-type','application/x-www-form-urlencoded')
            req.send({'name': attr, 'args': args, 'kwargs': kwargs, 'csrfmiddlewaretoken': self.csrftoken})

        return __ajax__

